import re
import sys
import os.path
import json
import random
from Toolbox.config import *
from Toolbox.Debug import Debug
from Toolbox.Utilities import Utilities as Utils

image_id = [1038, 1130, 1164, 1290, 1552, 1746, 2112, 2276, 2498, 2626, 2706, 2864, 3050, 3064, 3082, 3094, 3102, 3108, 3214, 3254, 3306, 3364, 3450, 3458, 3632, 3664, 3692, 3972, 4130, 4306, 4312, 4366, 4398, 4674, 4694, 4746, 5012, 5205, 5335, 5361, 5631, 5661, 5695, 6069, 6321, 6373, 6583, 6767, 6875, 7063, 7077, 7087, 7113, 7327, 7505, 7839, 7891, 7929, 8014, 8204, 8222, 8380, 8568, 8730, 8780, 8920, 8946, 8980, 9086, 9214, 9334, 9462, 9530, 9788, 9924, 10040, 10172, 10454, 10460, 10478, 10596, 10700, 11066, 11338, 11670, 11834, 12008, 12174, 12248, 12414, 12480, 12640, 12864, 12966, 12980, 13028, 13202, 13208, 13218, 13234, 13566, 13788, 13870, 13878, 13890, 13898, 13984, 14166, 14272, 14374, 14396, 14426, 14506, 14532, 14566, 14590, 14706, 14902, 14906, 15070, 15118, 15124, 15134, 15248, 15258, 15364, 15406, 15428, 15442, 15566, 15616, 15632, 15912, 16012, 16200, 16266, 16314, 16334, 16356, 16376, 16382, 16404, 16464, 16502, 16690, 16917, 16977, 17058, 17233, 17412, 17570, 17596, 17625, 17637, 17655, 17695, 17867, 17935, 18151, 18189, 18299, 18447, 18659, 18717, 18718, 18720, 18724, 18728, 18732, 18736, 18740, 18744, 18748, 18752, 18756, 18760, 18764, 18768, 18772, 18773, 18777, 18781, 18785, 18787, 18791, 18795, 18799, 18803, 18807, 18808, 18812, 18816, 18820, 18824, 18846, 18850, 18852, 18856, 18878, 18913, 18935, 18939, 19101, 19123, 19183, 19319, 19437, 19675, 19881, 19893, 19905, 19937, 19941, 19959, 20031, 20127, 20409, 20571, 20585, 20837, 20927, 20949, 20955, 21025, 21423, 21491, 21507, 21529, 21659, 21771, 21815, 22039, 22055, 22129, 22147, 22403, 22655, 22691, 22817, 22909, 23057, 23127, 23247, 23293, 23311, 23481, 23693, 23811, 23839, 23909, 23979, 24049, 24057, 24065, 24211, 24223, 24229, 24247, 24399, 24551, 24733, 25175, 25325, 25447, 25567, 25619, 25641, 25843, 25889, 25997, 26049, 26319, 26499, 26511, 26549, 26555, 26617, 26631, 26653, 26697, 26737, 26789, 26953, 27005, 27057, 27139, 27185, 27193, 27263, 27269, 27597, 27689, 27711, 27735, 27821, 27851, 27925, 28105, 28119, 28539, 28605, 28699, 28811, 28871, 28883, 28969, 29069, 29123, 29233, 29255, 29313, 29331, 29363, 29523, 29605, 29703, 29903, 30087, 30217, 30419, 30623, 30655, 30777, 30917, 31067, 31231, 31419, 31591, 31769, 31811, 31865, 32211, 32421, 32497, 32683, 32775, 32857, 32961, 33075, 33101, 33255, 33465, 33479, 33489, 33541, 33553, 33689, 33891, 34023, 34057, 34223, 34515, 34765, 34959, 34991, 35073, 35099, 35685, 35705, 36107, 36127, 36209, 36229, 36241, 36253, 36309, 36315, 36325, 36337, 36349, 36407, 36587, 36619, 36653, 36689, 36751, 36781, 36827, 36839, 36855, 37077, 37209, 37407, 37439, 37481, 37683, 37747, 37763, 37933, 38283, 38365, 38383, 38405, 38471, 38491, 38577, 38581, 38589, 38649, 38795, 38997, 39021, 39283, 39403, 39527, 39687, 39699, 39771, 39839, 39913, 40113, 40187, 40397, 40439, 40507, 40563, 40569, 40589, 40677, 40781, 40953, 41061, 41219, 41349, 41451, 41553, 41627, 41645, 41785, 41941, 42029, 42051, 42165, 42287, 42413, 42471, 42605, 42679, 42713, 43899, 43951, 43991, 44327, 44729, 44821, 44869, 44945, 44983, 45069, 45101, 45129, 45141, 45235, 45351, 45417, 45445, 45503, 45753, 45781, 45969, 46143, 46197, 46327, 46719, 46945, 46987, 47079, 47101, 47109, 47129, 47133, 47231, 47351, 47553, 47685, 47747, 47799, 47901, 47989, 48113, 48179, 48261, 48443, 48621, 48741, 48873, 49041, 49245, 49387, 49477, 49511, 49723, 49881, 50023, 50141, 50231, 50287, 50373, 50399, 50545, 50585, 50609, 50667, 50795, 50967, 50979, 51021, 51057, 51135, 51153, 51307, 51435, 51513, 51569, 51583, 51617, 51657, 51791, 51805, 51827, 51945, 52011, 52145, 52409, 52511, 52643, 53045, 53051, 53093, 53107, 53293, 53489, 53515, 53605, 53727, 53817, 53897, 53991, 54059, 54125, 54129, 54155, 54391, 54449, 54511, 54561, 54625, 54693, 54821, 54963, 55021, 55195, 55349, 55379, 55551, 55751, 56009, 56031, 56183, 56213, 56277, 56371, 56569, 56599, 56761, 56801, 56963, 57067, 57237, 57291, 57367, 57529, 57805, 57947, 58077, 58083, 58265, 58455, 58627, 58675, 58829, 58891, 59027, 59099, 59145, 59215, 59299, 59335, 59407, 59539, 59641, 59703, 59799, 59811, 59817, 59971, 60117, 60231, 60259, 60411, 60415, 60883, 60993, 61225, 61267, 61429, 61561, 61783, 61847, 61921, 61931, 61969, 62017, 62035, 62045, 62065, 62421, 62485, 62525, 62653, 62729, 62767, 62823, 62881, 62945, 63011, 63093, 63219, 63227, 63239, 63497, 63661, 63763, 63869, 63973, 64159, 64473, 64499, 64673, 64679, 64691, 64707, 65005, 65089, 65281, 65487, 65497, 65555, 65687, 65821, 66041, 66205, 66317, 66461, 66489, 66557, 67123, 67213, 67303, 67353, 67441, 67539, 67853, 67929, 68065, 68203, 68427, 68539, 68605, 68737, 68839, 68919, 69073, 69203, 69243, 69261, 69319, 69437, 69623, 69667, 69737, 70073, 70125, 70153, 70211, 70313, 70399, 70431, 70567, 70585, 70685, 70787, 70907, 71001, 71337, 71445, 71459, 71553, 71699, 71773, 71821, 71853, 72067, 72237, 72447, 72549, 72631, 72695, 72769, 72827, 72981, 73071, 73153, 73335, 73437, 73547, 73631, 73721, 73821, 73835, 73945, 74153, 74255, 74289, 74309, 74365, 74447, 74489, 74571, 74697, 74789, 74891, 74937, 74955, 74967, 75111, 75157, 75215, 75275, 75475, 75553, 75597, 75631, 75743, 75791, 75995, 76111, 76253, 76333, 76359, 76403, 76489, 76581, 76631, 76815, 76945, 77017, 77165, 77299, 77375, 77535, 77619, 77651, 77775, 77795, 77981, 77995, 78111, 78189, 78245, 78283, 79179, 79305, 79309, 79481, 79581, 79693, 79845, 79911, 79973, 79987, 80051, 80097, 80161, 80229, 80293, 80415, 80519, 80651, 80779, 80837, 80909, 80989, 81077, 81221, 81229, 81377, 81407, 81553, 81561, 81573, 81693, 81815, 82007, 82019, 82033, 82053, 82159, 82339, 82493, 82629, 82699, 82777, 82843, 82951, 83047, 83147, 83175, 83225, 83377, 83463, 83473, 83671, 83685, 83701, 83727, 83745, 83757, 83813, 83945, 84047, 84053, 84153, 84313, 84319, 84369, 84475, 84671, 84871, 84913, 85015, 85161, 85199, 85255, 85285, 85345, 85393, 85465, 85499, 85671, 85723, 85775, 85975, 86295, 86457, 86573, 86695, 86797, 86805, 86823, 86853, 87269, 87347, 87543, 87731, 87761, 87863, 88023, 88105, 88229, 88319, 88635, 88853, 88925, 88999, 89193, 89411, 89443, 89479, 89645, 89749, 89799, 89807, 89819, 90035, 90119, 90315, 90379, 90467, 90633, 90665, 90879, 91981, 92079, 92115, 92273, 92343, 92417, 92467, 92555, 92593, 92791, 92931, 92939, 93145, 93211, 93357, 93489, 93505, 93509, 93529, 93605, 93697, 93859, 93999, 94029, 94047, 94055, 94101, 94147, 94209, 94699, 94801, 94905, 95007, 95023, 95135, 95235, 95445, 95539, 95697, 95831, 95935, 95997, 96081, 96153, 96171, 96293, 96367, 96389, 96397, 96545, 96695, 96889, 96895, 96899, 97049, 97053, 97089, 97133, 97213, 97387, 97507, 97549, 97613, 97789, 97845, 98083, 98097, 98175, 98317, 98323, 98327, 98339, 98455, 98647, 98859, 98905, 98919, 99125, 99293, 99553, 99575, 99613, 99791, 99995, 100029, 100105, 100235, 100287, 100351, 100573, 100665, 100717, 101113, 101227, 101379, 101433, 101453, 101469, 101581, 101673, 101699, 101791, 102143, 102539, 102647, 102777, 102883, 103091, 103253, 103257, 103371, 103511, 103535, 103721, 103759, 103951, 103965, 103989, 104053, 104309, 104315, 104333, 104343, 104481, 104493, 104533, 104563, 104695, 104775, 104799, 104901, 105057, 105137, 105157, 105299, 105531, 105537, 105543, 105569, 105757, 105847, 105933, 105957, 106105, 106269, 106345, 106365, 106377, 106401, 106411, 106443, 106465, 106589, 106763, 106863, 107059, 107095, 107259, 107439, 107579, 107609, 107729, 107759, 107879, 108023, 108075, 108225, 108339, 108359, 108495, 108591, 108627, 108655, 108733, 108899, 108967, 109063, 109163, 109175, 109195, 109335, 109457, 109589, 109663, 109893, 110151, 110349, 110419, 110433, 110511, 110521, 110573, 110587, 110707, 110733, 110737, 110917, 111103, 111115, 111333, 111375, 111419, 111505, 111633, 111721, 111835, 111965, 112087, 112465, 112539, 112709, 112717, 112739, 112991, 113135, 113145, 113179, 113277, 113387, 113423, 113845, 113889, 113893, 113915, 113941, 114221, 114353, 114385, 114403, 114427, 114499, 114701, 114857, 114861, 115043, 115153, 115277, 115369, 115491, 115621, 115817, 115951, 116201, 116211, 116237, 116315, 116401, 116517, 116713, 116829, 117037, 117113, 117315, 117335, 117595, 117793, 117977, 118069, 118173, 118341, 118519, 118527, 118643, 118667, 118829, 118909, 118977, 119087, 119157, 119235, 119241, 119341, 119437, 119905, 120027, 120089, 120175, 120275, 120333, 120375, 120515, 120535, 120541, 120547, 120557, 120577, 120629, 120721, 120755, 120773, 120807, 120941, 121183, 121301, 121477, 121553, 121557, 121673, 121863, 122067, 122163, 122349, 122437, 122555, 122681, 123083, 123185, 123355, 123577, 123617, 123791, 123851, 123989, 124129, 124245, 124257, 124281, 124371, 124469, 124619, 124751, 124865, 124963, 125051, 125159, 125325, 125411, 125557, 125697, 125763, 125839, 125885, 125933, 126135, 126227, 126339, 126361, 126397, 126551, 126563, 126623, 126697, 126709, 126841, 126979, 127001, 127107, 127375, 127397, 127411, 127425, 127435, 127503, 127539, 127761, 127905, 128103, 128189, 128199, 128209, 128221, 128233, 128317, 128333, 128431, 128587, 128727, 129487, 129507, 129519, 129759, 129781, 129901, 129977, 130011, 130171, 130213, 130319, 130387, 130629, 130749, 130921, 131585, 131681, 131851, 131871, 131895, 131935, 132035, 132395, 132529, 132717, 132771, 132795, 133839, 133855, 133883, 133975, 134321, 134465, 134607, 134713, 134941, 134973, 134991, 135019, 135075, 135259, 135281, 135465, 135711, 135717, 135831, 135953, 135965, 136161, 136249, 136461, 136475, 136499, 136591, 136653, 136801, 136835, 136971, 137123, 137135, 137153, 137157, 137381, 137469, 137473, 137509, 137527, 137623, 137913, 137983, 138073, 138171, 138337, 138459, 138529, 138605, 138629, 138753, 138805, 138929, 138949, 139939, 140067, 140419, 140569, 140735, 140885, 140913, 141121, 141299, 141375, 141623, 141817, 141947, 142063, 142213, 142535, 142663, 142695, 142855, 143013, 143059, 143091, 143349, 143427, 143513, 143669, 143733, 143799, 143893, 143965, 144093, 144295, 144365, 144577, 144611, 144623, 144745, 144853, 144879, 144905, 145035, 145167, 145195, 145349, 145643, 145707, 145753, 145781, 145859, 145907, 145943, 146145, 146223, 146467, 146521, 146615, 146811, 146909, 147063, 147205, 147423, 147587, 147707, 147865, 148267, 148295, 148403, 148581, 148799, 149071, 149347, 149911, 150045, 150355, 150495, 150731, 150907, 150993, 151187, 151289, 151431, 151527, 151639, 151753, 151913, 152101, 152263, 152275, 152391, 152599, 152713, 152859, 152975, 152985, 153327, 153513, 153521, 153611, 153631, 153671, 153709, 153917, 153997, 154107, 154125, 154367, 154593, 154599, 154611, 154619, 154623, 154687, 154709, 154947, 155103, 155213, 155527, 155583, 155719, 155783, 155865, 156051, 156593, 156693, 156807, 156969, 157141, 157269, 157353, 157453, 157545, 157619, 157799, 158717, 158929, 159341, 159413, 159503, 159543, 159587, 159727, 159737, 159787, 159867, 159949, 160069, 160175, 160195, 160299, 160505, 160715, 160883, 160897, 161079, 161095, 161235, 161379, 161465, 161491, 161553, 161591, 161683, 161867, 162035, 162299, 162481, 162517, 162671, 162691, 163017, 163087, 163149, 163237, 163331, 164137, 164389, 164489, 164771, 165009, 165035, 165153, 165285, 165665, 165813, 165859, 165985, 165991, 166061, 166145, 166283, 166553, 166675, 166773, 166963, 167125, 167311, 167457, 168537, 168571, 168685, 168813, 168933, 169019, 169023, 169119, 169173, 169275, 169293, 169501, 169557, 169579, 169657, 169869, 169983, 169995, 170011, 170077, 170101, 170249, 170407, 170571, 170969, 171065, 171595, 171693, 171701, 171917, 172067, 172205, 172423, 172551, 172641, 172683, 172849, 172953, 173121, 173143, 173295, 173685, 173863, 173887, 173907, 174057, 174203, 174309, 174353, 174519, 174649, 174851, 174861, 175057, 175111, 175303, 175309, 175623, 175753, 175915, 176073, 176127, 176215, 176301, 176305, 176327, 176535, 176695, 176895, 176995, 177201, 177423, 177457, 177471, 177507, 177687, 177771, 177897, 178299, 178341, 178497, 178559, 178741, 179141, 179159, 179347, 179411, 179613, 179675, 179743, 179969, 180155, 180259, 180445, 180457, 180621, 180825, 180929, 181041, 181209, 181245, 181259, 181389, 181633, 181651, 181831, 181915, 182055, 182077, 182217, 182813, 182995, 183123, 183201, 183371, 183515, 184049, 184277, 184393, 184479, 184549, 184705, 184813, 184867, 184885, 184915, 185293, 185391, 185527, 185567, 185739, 185969, 186525, 186683, 187295, 187417, 187431, 187537, 187617, 187677, 187725, 187987, 188287, 188539, 188639, 188763, 188857, 189053, 189077, 189189, 189331, 189573, 189597, 189709, 189723, 189727, 189751, 189927, 190055, 190171, 190205, 190355, 190417, 190633, 190917, 191179, 191219, 191343, 191347, 191457, 191599, 191725, 191739, 191995, 192069, 192271, 192397, 192541, 192683, 192711, 192901, 192925, 193027, 193077, 193107, 193177, 193279, 193565, 193779, 193881, 193909, 193927, 194145, 194263, 194353, 194375, 194477, 194569, 194583, 194609, 194693, 194845, 195079, 195183, 195213, 195253, 195411, 195581, 195631, 195779, 195869, 196017, 196183, 196223, 196347, 196525, 196645, 196813, 196821, 196921, 197101, 197269, 197289, 197315, 197677, 197725, 197887, 197921, 198171, 198331, 198335, 198343, 198461, 198513, 198587, 198599, 198713, 198747, 198793, 198891, 199079, 199095, 199119, 199137, 199149, 199167, 199205, 199213, 199405, 199441, 199643, 199859, 199901, 199985, 200005, 200361, 200623, 200633, 200655, 200703, 201079, 201095, 201127, 201183, 201279, 201349, 201389, 201491, 201557, 201723, 201833, 201987, 202045, 202079, 202223, 202397, 202633, 202723, 202735, 202911, 203047, 203141, 203165, 203189, 203273, 203445, 203531, 203629, 203649, 203673, 203685, 203697, 203711, 203853, 204011, 204073, 204137, 204547, 204793, 204881, 205095, 205155, 205237, 205463, 205781, 205787, 205999, 206037, 206059, 206069, 206213, 206501, 206681, 206787, 206973, 207099, 207135, 207245, 207333, 207495, 207659, 207671, 207807, 207855, 207863, 208023, 208033, 208081, 208119, 208171, 208185, 208437, 208447, 208521, 208563, 208621, 208723, 208769, 208953, 209071, 209173, 211535, 211681, 211783, 211801, 211889, 212041, 212233, 212399, 212535, 212637, 212737, 212765, 212967, 213123, 213337, 213483, 213659, 213697, 213849, 214041, 214203, 214257, 214637, 214661, 214757, 214907, 215499, 215635, 215757, 216053, 216143, 216225, 216443, 216591, 216761, 217289, 217345, 217463, 217593, 217811, 217931, 218041, 218179, 218499, 218607, 218677, 218807, 218913, 218933, 219105, 219333, 219531, 219559, 219623, 219789, 219963, 220087, 220361, 220449, 220461, 220507, 220615, 220661, 220769, 220781, 220793, 220995, 221097, 221185, 221197, 221283, 221769, 221907, 222011, 222099, 222195, 222239, 222481, 222763, 222877, 222909, 223245, 223423, 223543, 223577, 223651, 223677, 224083, 224291, 224353, 224439, 224637, 224733, 224871, 224973, 225119, 225201, 225381, 225509, 225643, 225689, 225847, 225915, 225963, 226007, 226099, 226119, 226281, 226457, 226535, 226777, 226893, 226923, 228558, 228764, 228954, 229032, 229080, 229188, 229246, 229282, 229298, 229332, 229384, 229502, 229524, 229734, 229864, 230038, 230060, 230462, 230612, 230676, 230858, 230880, 232800, 232832, 232846, 232922, 233116, 233348, 233416, 233610, 233678, 233750, 233960, 234028, 234076, 234328, 234462, 234544, 234686, 234986, 235018, 235134, 235254, 235656, 235680, 235960, 236122, 236154, 236214, 236238, 236414, 236464, 236472, 236828, 236902, 236988, 237386, 237446, 237626, 237804, 237968, 238092, 238494, 238588, 238756, 238820, 238844, 239044, 239214, 239374, 239394, 239792, 240016, 240038, 240068, 240208, 240256, 240398, 240570, 240632, 240686, 240800, 240818, 240886, 240936, 240952, 241102, 241156, 241210, 241340, 241364, 241492, 243298, 244336, 244602, 244782, 244882, 245098, 245322, 246016, 246108, 246264, 246324, 246358, 246374, 246550, 246622, 246744, 250984, 251190, 251388, 251532, 251682, 251740, 252188, 252396, 252638, 252766, 252914, 253086, 253162, 253290, 253364, 253478, 253592, 253822, 253864, 254460, 254490, 254544, 254604, 254628, 254840, 254920, 255038, 255130, 255292, 255410, 256444, 256500, 256730, 256846, 256926, 257098, 257444, 257620, 257808, 257942, 258214, 258346, 258374, 258428, 258622, 258742, 258998, 259220, 259224, 259286, 259398, 259492, 259544, 259652, 259694, 259744, 259906, 259974, 260002, 260212, 260376, 260436, 260514, 260616, 260738, 260780, 261004, 261188, 261258, 261380, 261642, 261936, 262100, 262378, 262490, 262528, 262646, 262894, 263402, 263500, 263596, 263718, 263902, 264030, 264058, 264140, 264158, 264324, 264438, 264494, 264700, 264722, 264900, 265022, 265156, 265316, 265376, 265548, 265622, 265758, 266002, 266386, 266740, 266886, 266956, 267076, 267206, 267340, 267384, 267410, 267514, 267692, 267742, 267746, 267770, 267854, 268110, 268148, 268232, 268284, 268334, 268550, 268654, 268748, 268836, 268958, 269046, 269150, 269378, 269424, 269566, 269694, 269934, 270162, 270284, 270558, 270748, 270794, 270834, 270882, 270942, 270986, 271060, 271080, 271198, 271294, 271476, 271534, 271626, 271932, 272000, 272062, 272130, 272194, 272326, 272704, 272756, 272772, 272842, 272928, 273088, 273252, 273292, 273328, 273632, 273698, 273770, 273912, 273998, 274174, 274192, 274314, 274450, 274564, 274824, 274966, 274984, 275206, 275290, 275404, 275550, 275562, 275726, 275854, 275956, 276050, 276072, 276274, 276348, 276464, 276576, 276642, 276668, 276772, 276902, 277042, 277174, 277370, 277484, 277636, 277866, 278106, 278224, 280146, 280248, 280380, 280504, 280636, 280908, 281188, 281398, 281580, 282272, 282330, 282406, 282492, 282738, 283008, 283052, 283198, 283358, 283386, 283408, 283618, 283656, 283694, 283712, 283836, 283982, 284116, 284192, 284306, 284322, 284440, 284974, 285106, 285234, 285280, 285448, 285508, 285554, 285606, 285842, 286008, 286080, 286140, 286352, 286358, 286740, 286938, 287008, 287106, 287708, 287876, 288018]

if __name__ == '__main__':
    id_from = int(sys.argv[1])
    id_to = int(sys.argv[2])
    list_truyen = Utils.load_json(PATH_TO_LIST_TRUYEN)
    list_des = Utils.load_json(PATH_TO_TRUYEN_DES)
    for i in range(id_from, id_to):
        upload_result = {str(i): {}}
        try:
            if os.path.exists("{}/truyenfull_{}.json".format(PATH_TO_CHAPTER_FOLDER, i)):
                # slug setup
                slug_info = re.findall(r"truyenfull.vn/(.+?)/", list_truyen[str(i)]['url'])
                if len(slug_info) != 1:
                    slug = Utils.name2slug(list_truyen[str(i)]['name'])
                else:
                    slug = slug_info[0]
                slug = slug + "_" + str(random.randint(1000000, 9999999))
                # category setup
                categories = list_des[str(i)]['category']
                if len(categories) == 0:
                    categories_id = Utils.get_taxonomy_id(['Đang cập nhật'], type=CATEGORY)
                else:
                    categories_id = Utils.get_taxonomy_id(list_des[str(i)]['category'], type=CATEGORY)
                # cover image setup
                # cover_path = "cover/{}.jpg".format(slug)
                # Utils.download_image_from_url(list_des[str(i)]['cover'], cover_path)

                # random_img = ""
                # while ".jpeg" not in random_img:
                #     random_img = random.choice(os.listdir("random_image"))
                # upload_res = Utils.upload_cover_image("random_image/{}".format(random_img))
                # media_id = upload_res["media_id"] if upload_res["status_code"] == 201 else 0
                media_id = image_id[random.randint(0, len(image_id))]
                author = list_truyen[str(i)]['author'] if list_truyen[str(i)]['author'] != "" else "Đang cập nhật"
                author_id = Utils.get_taxonomy_id([author], AUTHOR)
                source = list_des[str(i)]['source'] if list_des[str(i)]['source'] != "" else "Sưu tầm"
                source_id = Utils.get_taxonomy_id([source], SOURCE)
                truyen_post = {
                    "slug": slug,
                    "status": "publish",
                    "title": str(list_truyen[str(i)]['name']),
                    "content": str(list_des[str(i)]['description']),
                    "author": 1,
                    "excerpt": "",
                    "categories": categories_id,
                    "meta": {
                        "tw_multi_chap": 1,
                        "tw_status": "Full",
                        "tw_loai": "Dịch"
                    },
                    "featured_media": int(media_id),
                    "tac-gia": str(author_id),
                    "nguon": str(source_id)
                }
                res = Utils.post_fetch(INSERT_POST_API, truyen_post)
                if res.status_code == 201:
                    res_json = res.json()
                    id_post = res_json['id']
                    upload_result[str(i)]['post_id'] = str(id_post)
                    with open("{}/truyenfull_{}.json".format(PATH_TO_CHAPTER_FOLDER, i), 'r', encoding='utf8') as f4:
                        list_chap = json.load(f4)
                        upload_result[str(i)]['chapter'] = {}
                        for chap in range(1, len(list_chap) + 1):
                            slug = "chuong_" + str(list_chap[str(chap)]['chapter']) + "_" + str(random.randint(1000, 9999))
                            title = str(list_chap[str(chap)]['title'])
                            title = re.sub(r"<.+?>", "", title.strip(), count=0, flags=0)
                            chap_data = {
                                "slug": slug,
                                "status": "publish",
                                "parent": id_post,
                                "title": title,
                                "content": str(list_chap[str(chap)]['content']),
                                "ping_status": "open"
                            }
                            res_chap = Utils.post_fetch(INSERT_CHAP_API, chap_data)
                            if res_chap.status_code == 201:
                                Debug.log("Insert success chapter {}".format(chap))
                                upload_result[str(i)]['chapter'][str(chap)] = res_chap.json()['id']

                        upload_result[str(i)]['status'] = "finish"
                        Debug.log("Finish upload {}".format(list_truyen[str(i)]['name']))
            else:
                Debug.log("File chapter data of novel id {} not exist".format(i))
        except Exception as e:
            Debug.log(str(e))
            upload_result[str(i)]['status'] = "error {}".format(str(e))
        Utils.dump_json_a("result_upload.json", upload_result)
